{"version":3,"file":"mdtoc.min.js","sources":["../src/main.js"],"sourcesContent":["const MDTOC_DEFAULT_OPTIONS = {\r\n  name: 'mdtoc',\r\n  prefix: '',\r\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\r\n};\r\n\r\nconst mdtoc = function(selector, options) {\r\n  this.done = false;\r\n  this.selector = selector;\r\n\r\n  this.md = null;\r\n  if (Object.prototype.toString.call(selector) === '[object String]') {\r\n    this.md = document.querySelector(selector);\r\n  } else if (selector instanceof HTMLElement) {\r\n    this.md = selector;\r\n  }\r\n  if (!this.md) {\r\n    throw new Error('invalid selector');\r\n  }\r\n\r\n  this.options = Object.assign({}, MDTOC_DEFAULT_OPTIONS, options);\r\n\r\n  this.tocTree = {\r\n    heading: 0,\r\n    name: this.options.name,\r\n    children: []\r\n  };\r\n\r\n  this.init();\r\n};\r\n\r\nmdtoc.prototype = {\r\n  init: function() {\r\n    let headings = Array.prototype.filter\r\n      .call(\r\n        this.md.childNodes || [],\r\n        node =>\r\n          node instanceof HTMLHeadingElement &&\r\n          (this.options.filter || []).indexOf(node.tagName.toLowerCase()) >= 0\r\n      )\r\n      .map(node => ({\r\n        heading: parseInt(node.tagName[1]),\r\n        name: node.innerHTML,\r\n        link: '#' + this.options.prefix + node.id\r\n      }));\r\n\r\n    const headingsLength = headings.length;\r\n    for (let i = 0; i < headingsLength; i++) {\r\n      this.appendChild(this.tocTree, headings[i]);\r\n    }\r\n\r\n    this.done = true;\r\n  },\r\n  get: function() {\r\n    if (!this.done) {\r\n      throw new Error('mdtoc initialize failed');\r\n    }\r\n\r\n    return this.tocTree;\r\n  },\r\n  make: function(useLink) {\r\n    if (!this.done) {\r\n      throw new Error('mdtoc initialize failed');\r\n    }\r\n\r\n    let tocTreeNode = document.createElement('ol');\r\n    tocTreeNode.id = this.options.prefix + this.options.name;\r\n\r\n    this.appendChildren(tocTreeNode, this.tocTree.children, useLink);\r\n\r\n    return tocTreeNode;\r\n  },\r\n  appendChild: function(root, child) {\r\n    let children = root.children;\r\n    if (children.length <= 0) {\r\n      children.push(\r\n        Object.assign({}, child, {\r\n          children: []\r\n        })\r\n      );\r\n    } else {\r\n      let _child = children[children.length - 1];\r\n      if (_child.heading >= child.heading) {\r\n        children.push(\r\n          Object.assign({}, child, {\r\n            children: []\r\n          })\r\n        );\r\n      } else {\r\n        this.appendChild(_child, child);\r\n      }\r\n    }\r\n  },\r\n  appendChildren: function(root, childrens, useLink) {\r\n    const childrenLength = childrens.length;\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      const child = childrens[i];\r\n      const childNode = document.createElement('li');\r\n      if (useLink) {\r\n        const linkNode = document.createElement('a');\r\n        linkNode.href = child.link;\r\n        linkNode.innerHTML = child.name;\r\n        childNode.appendChild(linkNode);\r\n      } else {\r\n        childNode.setAttribute('data-link', child.link);\r\n        childNode.innerHTML = child.name;\r\n      }\r\n\r\n      if (child.children.length > 0) {\r\n        const childrenNode = document.createElement('ol');\r\n        childNode.appendChild(childrenNode);\r\n        this.appendChildren(childrenNode, child.children, useLink);\r\n      }\r\n\r\n      root.appendChild(childNode);\r\n    }\r\n  }\r\n};\r\n\r\nexport default function(selector, options) {\r\n  return new mdtoc(selector, options);\r\n}\r\n"],"names":["MDTOC_DEFAULT_OPTIONS","mdtoc","selector","options","done","md","Object","prototype","toString","call","document","querySelector","HTMLElement","this","Error","assign","tocTree","name","init","headings","Array","filter","childNodes","node","HTMLHeadingElement","_this","indexOf","tagName","toLowerCase","map","parseInt","innerHTML","prefix","id","headingsLength","length","i","appendChild","useLink","tocTreeNode","createElement","appendChildren","children","root","child","push","_child","heading","childrens","childrenLength","childNode","linkNode","href","link","setAttribute","childrenNode"],"mappings":";;;;;iLAAA,IAAMA,EAAwB,MACtB,eACE,UACA,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAGnCC,EAAQ,SAASC,EAAUC,WAC1BC,MAAO,OACPF,SAAWA,OAEXG,GAAK,KACuC,oBAA7CC,OAAOC,UAAUC,SAASC,KAAKP,QAC5BG,GAAKK,SAASC,cAAcT,GACxBA,aAAoBU,mBACxBP,GAAKH,IAEPW,KAAKR,SACF,IAAIS,MAAM,yBAGbX,QAAUG,OAAOS,OAAO,GAAIf,EAAuBG,QAEnDa,QAAU,SACJ,OACHH,KAAKV,QAAQc,cACT,SAGPC,eAGPjB,EAAMM,UAAY,MACV,0BACAY,EAAWC,MAAMb,UAAUc,OAC5BZ,KACCI,KAAKR,GAAGiB,YAAc,GACtB,mBACEC,aAAgBC,oBACmD,IAAlEC,EAAKtB,QAAQkB,QAAU,IAAIK,QAAQH,EAAKI,QAAQC,iBAEpDC,IAAI,kBAAS,SACHC,SAASP,EAAKI,QAAQ,SACzBJ,EAAKQ,eACL,IAAMN,EAAKtB,QAAQ6B,OAAST,EAAKU,MAGrCC,EAAiBf,EAASgB,OACvBC,EAAI,EAAGA,EAAIF,EAAgBE,SAC7BC,YAAYxB,KAAKG,QAASG,EAASiB,SAGrChC,MAAO,OAET,eACES,KAAKT,WACF,IAAIU,MAAM,kCAGXD,KAAKG,cAER,SAASsB,OACRzB,KAAKT,WACF,IAAIU,MAAM,+BAGdyB,EAAc7B,SAAS8B,cAAc,eAC7BP,GAAKpB,KAAKV,QAAQ6B,OAASnB,KAAKV,QAAQc,UAE/CwB,eAAeF,EAAa1B,KAAKG,QAAQ0B,SAAUJ,GAEjDC,eAEI,SAASI,EAAMC,OACtBF,EAAWC,EAAKD,YAChBA,EAASP,QAAU,IACZU,KACPvC,OAAOS,OAAO,GAAI6B,EAAO,UACb,UAGT,KACDE,EAASJ,EAASA,EAASP,OAAS,GACpCW,EAAOC,SAAWH,EAAMG,UACjBF,KACPvC,OAAOS,OAAO,GAAI6B,EAAO,UACb,WAITP,YAAYS,EAAQF,oBAIf,SAASD,EAAMK,EAAWV,WAClCW,EAAiBD,EAAUb,OACxBC,EAAI,EAAGA,EAAIa,EAAgBb,IAAK,KACjCQ,EAAQI,EAAUZ,GAClBc,EAAYxC,SAAS8B,cAAc,SACrCF,EAAS,KACLa,EAAWzC,SAAS8B,cAAc,OAC/BY,KAAOR,EAAMS,OACbtB,UAAYa,EAAM3B,OACjBoB,YAAYc,UAEZG,aAAa,YAAaV,EAAMS,QAChCtB,UAAYa,EAAM3B,QAGF,EAAxB2B,EAAMF,SAASP,OAAY,KACvBoB,EAAe7C,SAAS8B,cAAc,QAClCH,YAAYkB,QACjBd,eAAec,EAAcX,EAAMF,SAAUJ,KAG/CD,YAAYa,MAKR,SAAShD,EAAUC,UACzB,IAAIF,EAAMC,EAAUC"}